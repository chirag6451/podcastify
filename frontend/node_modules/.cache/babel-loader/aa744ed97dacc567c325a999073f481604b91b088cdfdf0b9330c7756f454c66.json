{"ast":null,"code":"\"use strict\";\n\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merchantapi_accounts_v1beta = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar merchantapi_accounts_v1beta;\n(function (merchantapi_accounts_v1beta) {\n  /**\n   * Merchant API\n   *\n   * Programmatically manage your Merchant Center Accounts.\n   *\n   * @example\n   * ```js\n   * const {google} = require('googleapis');\n   * const merchantapi = google.merchantapi('accounts_v1beta');\n   * ```\n   */\n  class Merchantapi {\n    constructor(options, google) {\n      this.context = {\n        _options: options || {},\n        google\n      };\n      this.accounts = new Resource$Accounts(this.context);\n      this.termsOfService = new Resource$Termsofservice(this.context);\n    }\n  }\n  merchantapi_accounts_v1beta.Merchantapi = Merchantapi;\n  class Resource$Accounts {\n    constructor(context) {\n      this.context = context;\n      this.businessIdentity = new Resource$Accounts$Businessidentity(this.context);\n      this.businessInfo = new Resource$Accounts$Businessinfo(this.context);\n      this.emailpreferences = new Resource$Accounts$Emailpreferences(this.context);\n      this.homepage = new Resource$Accounts$Homepage(this.context);\n      this.issues = new Resource$Accounts$Issues(this.context);\n      this.onlineReturnPolicies = new Resource$Accounts$Onlinereturnpolicies(this.context);\n      this.programs = new Resource$Accounts$Programs(this.context);\n      this.regions = new Resource$Accounts$Regions(this.context);\n      this.shippingSettings = new Resource$Accounts$Shippingsettings(this.context);\n      this.termsOfServiceAgreementStates = new Resource$Accounts$Termsofserviceagreementstates(this.context);\n      this.users = new Resource$Accounts$Users(this.context);\n    }\n    createAndConfigure(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/accounts:createAndConfigure').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    listSubaccounts(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+provider}:listSubaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['provider'],\n        pathParams: ['provider'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  merchantapi_accounts_v1beta.Resource$Accounts = Resource$Accounts;\n  class Resource$Accounts$Businessidentity {\n    constructor(context) {\n      this.context = context;\n    }\n    getBusinessIdentity(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    updateBusinessIdentity(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  merchantapi_accounts_v1beta.Resource$Accounts$Businessidentity = Resource$Accounts$Businessidentity;\n  class Resource$Accounts$Businessinfo {\n    constructor(context) {\n      this.context = context;\n    }\n    getBusinessInfo(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    updateBusinessInfo(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  merchantapi_accounts_v1beta.Resource$Accounts$Businessinfo = Resource$Accounts$Businessinfo;\n  class Resource$Accounts$Emailpreferences {\n    constructor(context) {\n      this.context = context;\n    }\n    getEmailPreferences(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    updateEmailPreferences(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  merchantapi_accounts_v1beta.Resource$Accounts$Emailpreferences = Resource$Accounts$Emailpreferences;\n  class Resource$Accounts$Homepage {\n    constructor(context) {\n      this.context = context;\n    }\n    claim(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}:claim').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    getHomepage(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    unclaim(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}:unclaim').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    updateHomepage(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  merchantapi_accounts_v1beta.Resource$Accounts$Homepage = Resource$Accounts$Homepage;\n  class Resource$Accounts$Issues {\n    constructor(context) {\n      this.context = context;\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+parent}/issues').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  merchantapi_accounts_v1beta.Resource$Accounts$Issues = Resource$Accounts$Issues;\n  class Resource$Accounts$Onlinereturnpolicies {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+parent}/onlineReturnPolicies').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  merchantapi_accounts_v1beta.Resource$Accounts$Onlinereturnpolicies = Resource$Accounts$Onlinereturnpolicies;\n  class Resource$Accounts$Programs {\n    constructor(context) {\n      this.context = context;\n    }\n    disable(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}:disable').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    enable(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}:enable').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+parent}/programs').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  merchantapi_accounts_v1beta.Resource$Accounts$Programs = Resource$Accounts$Programs;\n  class Resource$Accounts$Regions {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+parent}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+parent}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  merchantapi_accounts_v1beta.Resource$Accounts$Regions = Resource$Accounts$Regions;\n  class Resource$Accounts$Shippingsettings {\n    constructor(context) {\n      this.context = context;\n    }\n    getShippingSettings(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    insert(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+parent}/shippingSettings:insert').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  merchantapi_accounts_v1beta.Resource$Accounts$Shippingsettings = Resource$Accounts$Shippingsettings;\n  class Resource$Accounts$Termsofserviceagreementstates {\n    constructor(context) {\n      this.context = context;\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    retrieveForApplication(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+parent}/termsOfServiceAgreementStates:retrieveForApplication').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  merchantapi_accounts_v1beta.Resource$Accounts$Termsofserviceagreementstates = Resource$Accounts$Termsofserviceagreementstates;\n  class Resource$Accounts$Users {\n    constructor(context) {\n      this.context = context;\n    }\n    create(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+parent}/users').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'POST',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    delete(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'DELETE',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    list(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+parent}/users').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['parent'],\n        pathParams: ['parent'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    patch(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'PATCH',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  merchantapi_accounts_v1beta.Resource$Accounts$Users = Resource$Accounts$Users;\n  class Resource$Termsofservice {\n    constructor(context) {\n      this.context = context;\n    }\n    accept(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}:accept').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    get(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: ['name'],\n        pathParams: ['name'],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n    retrieveLatest(paramsOrCallback, optionsOrCallback, callback) {\n      let params = paramsOrCallback || {};\n      let options = optionsOrCallback || {};\n      if (typeof paramsOrCallback === 'function') {\n        callback = paramsOrCallback;\n        params = {};\n        options = {};\n      }\n      if (typeof optionsOrCallback === 'function') {\n        callback = optionsOrCallback;\n        options = {};\n      }\n      const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n      const parameters = {\n        options: Object.assign({\n          url: (rootUrl + '/accounts/v1beta/termsOfService:retrieveLatest').replace(/([^:]\\/)\\/+/g, '$1'),\n          method: 'GET',\n          apiVersion: ''\n        }, options),\n        params,\n        requiredParams: [],\n        pathParams: [],\n        context: this.context\n      };\n      if (callback) {\n        (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n      } else {\n        return (0, googleapis_common_1.createAPIRequest)(parameters);\n      }\n    }\n  }\n  merchantapi_accounts_v1beta.Resource$Termsofservice = Resource$Termsofservice;\n})(merchantapi_accounts_v1beta || (exports.merchantapi_accounts_v1beta = merchantapi_accounts_v1beta = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","merchantapi_accounts_v1beta","googleapis_common_1","require","Merchantapi","constructor","options","google","context","_options","accounts","Resource$Accounts","termsOfService","Resource$Termsofservice","businessIdentity","Resource$Accounts$Businessidentity","businessInfo","Resource$Accounts$Businessinfo","emailpreferences","Resource$Accounts$Emailpreferences","homepage","Resource$Accounts$Homepage","issues","Resource$Accounts$Issues","onlineReturnPolicies","Resource$Accounts$Onlinereturnpolicies","programs","Resource$Accounts$Programs","regions","Resource$Accounts$Regions","shippingSettings","Resource$Accounts$Shippingsettings","termsOfServiceAgreementStates","Resource$Accounts$Termsofserviceagreementstates","users","Resource$Accounts$Users","createAndConfigure","paramsOrCallback","optionsOrCallback","callback","params","rootUrl","parameters","assign","url","replace","method","apiVersion","requiredParams","pathParams","createAPIRequest","delete","get","list","listSubaccounts","patch","getBusinessIdentity","updateBusinessIdentity","getBusinessInfo","updateBusinessInfo","getEmailPreferences","updateEmailPreferences","claim","getHomepage","unclaim","updateHomepage","disable","enable","create","getShippingSettings","insert","retrieveForApplication","accept","retrieveLatest"],"sources":["/Users/chiragahmedabadi/dev/google_auth/node_modules/googleapis/build/src/apis/merchantapi/accounts_v1beta.js"],"sourcesContent":["\"use strict\";\n// Copyright 2020 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.merchantapi_accounts_v1beta = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-empty-interface */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable no-irregular-whitespace */\nconst googleapis_common_1 = require(\"googleapis-common\");\nvar merchantapi_accounts_v1beta;\n(function (merchantapi_accounts_v1beta) {\n    /**\n     * Merchant API\n     *\n     * Programmatically manage your Merchant Center Accounts.\n     *\n     * @example\n     * ```js\n     * const {google} = require('googleapis');\n     * const merchantapi = google.merchantapi('accounts_v1beta');\n     * ```\n     */\n    class Merchantapi {\n        constructor(options, google) {\n            this.context = {\n                _options: options || {},\n                google,\n            };\n            this.accounts = new Resource$Accounts(this.context);\n            this.termsOfService = new Resource$Termsofservice(this.context);\n        }\n    }\n    merchantapi_accounts_v1beta.Merchantapi = Merchantapi;\n    class Resource$Accounts {\n        constructor(context) {\n            this.context = context;\n            this.businessIdentity = new Resource$Accounts$Businessidentity(this.context);\n            this.businessInfo = new Resource$Accounts$Businessinfo(this.context);\n            this.emailpreferences = new Resource$Accounts$Emailpreferences(this.context);\n            this.homepage = new Resource$Accounts$Homepage(this.context);\n            this.issues = new Resource$Accounts$Issues(this.context);\n            this.onlineReturnPolicies = new Resource$Accounts$Onlinereturnpolicies(this.context);\n            this.programs = new Resource$Accounts$Programs(this.context);\n            this.regions = new Resource$Accounts$Regions(this.context);\n            this.shippingSettings = new Resource$Accounts$Shippingsettings(this.context);\n            this.termsOfServiceAgreementStates =\n                new Resource$Accounts$Termsofserviceagreementstates(this.context);\n            this.users = new Resource$Accounts$Users(this.context);\n        }\n        createAndConfigure(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/accounts:createAndConfigure').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/accounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        listSubaccounts(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+provider}:listSubaccounts').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['provider'],\n                pathParams: ['provider'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback || {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    merchantapi_accounts_v1beta.Resource$Accounts = Resource$Accounts;\n    class Resource$Accounts$Businessidentity {\n        constructor(context) {\n            this.context = context;\n        }\n        getBusinessIdentity(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        updateBusinessIdentity(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    merchantapi_accounts_v1beta.Resource$Accounts$Businessidentity = Resource$Accounts$Businessidentity;\n    class Resource$Accounts$Businessinfo {\n        constructor(context) {\n            this.context = context;\n        }\n        getBusinessInfo(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        updateBusinessInfo(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    merchantapi_accounts_v1beta.Resource$Accounts$Businessinfo = Resource$Accounts$Businessinfo;\n    class Resource$Accounts$Emailpreferences {\n        constructor(context) {\n            this.context = context;\n        }\n        getEmailPreferences(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        updateEmailPreferences(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    merchantapi_accounts_v1beta.Resource$Accounts$Emailpreferences = Resource$Accounts$Emailpreferences;\n    class Resource$Accounts$Homepage {\n        constructor(context) {\n            this.context = context;\n        }\n        claim(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}:claim').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        getHomepage(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        unclaim(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}:unclaim').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        updateHomepage(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    merchantapi_accounts_v1beta.Resource$Accounts$Homepage = Resource$Accounts$Homepage;\n    class Resource$Accounts$Issues {\n        constructor(context) {\n            this.context = context;\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+parent}/issues').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    merchantapi_accounts_v1beta.Resource$Accounts$Issues = Resource$Accounts$Issues;\n    class Resource$Accounts$Onlinereturnpolicies {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+parent}/onlineReturnPolicies').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    merchantapi_accounts_v1beta.Resource$Accounts$Onlinereturnpolicies = Resource$Accounts$Onlinereturnpolicies;\n    class Resource$Accounts$Programs {\n        constructor(context) {\n            this.context = context;\n        }\n        disable(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}:disable').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        enable(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}:enable').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+parent}/programs').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    merchantapi_accounts_v1beta.Resource$Accounts$Programs = Resource$Accounts$Programs;\n    class Resource$Accounts$Regions {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+parent}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+parent}/regions').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    merchantapi_accounts_v1beta.Resource$Accounts$Regions = Resource$Accounts$Regions;\n    class Resource$Accounts$Shippingsettings {\n        constructor(context) {\n            this.context = context;\n        }\n        getShippingSettings(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        insert(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+parent}/shippingSettings:insert').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    merchantapi_accounts_v1beta.Resource$Accounts$Shippingsettings = Resource$Accounts$Shippingsettings;\n    class Resource$Accounts$Termsofserviceagreementstates {\n        constructor(context) {\n            this.context = context;\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        retrieveForApplication(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params =\n                    {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl +\n                        '/accounts/v1beta/{+parent}/termsOfServiceAgreementStates:retrieveForApplication').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    merchantapi_accounts_v1beta.Resource$Accounts$Termsofserviceagreementstates = Resource$Accounts$Termsofserviceagreementstates;\n    class Resource$Accounts$Users {\n        constructor(context) {\n            this.context = context;\n        }\n        create(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+parent}/users').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'POST',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        delete(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'DELETE',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        list(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+parent}/users').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['parent'],\n                pathParams: ['parent'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        patch(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'PATCH',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    merchantapi_accounts_v1beta.Resource$Accounts$Users = Resource$Accounts$Users;\n    class Resource$Termsofservice {\n        constructor(context) {\n            this.context = context;\n        }\n        accept(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}:accept').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        get(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/{+name}').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: ['name'],\n                pathParams: ['name'],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n        retrieveLatest(paramsOrCallback, optionsOrCallback, callback) {\n            let params = (paramsOrCallback ||\n                {});\n            let options = (optionsOrCallback || {});\n            if (typeof paramsOrCallback === 'function') {\n                callback = paramsOrCallback;\n                params = {};\n                options = {};\n            }\n            if (typeof optionsOrCallback === 'function') {\n                callback = optionsOrCallback;\n                options = {};\n            }\n            const rootUrl = options.rootUrl || 'https://merchantapi.googleapis.com/';\n            const parameters = {\n                options: Object.assign({\n                    url: (rootUrl + '/accounts/v1beta/termsOfService:retrieveLatest').replace(/([^:]\\/)\\/+/g, '$1'),\n                    method: 'GET',\n                    apiVersion: '',\n                }, options),\n                params,\n                requiredParams: [],\n                pathParams: [],\n                context: this.context,\n            };\n            if (callback) {\n                (0, googleapis_common_1.createAPIRequest)(parameters, callback);\n            }\n            else {\n                return (0, googleapis_common_1.createAPIRequest)(parameters);\n            }\n        }\n    }\n    merchantapi_accounts_v1beta.Resource$Termsofservice = Resource$Termsofservice;\n})(merchantapi_accounts_v1beta || (exports.merchantapi_accounts_v1beta = merchantapi_accounts_v1beta = {}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}