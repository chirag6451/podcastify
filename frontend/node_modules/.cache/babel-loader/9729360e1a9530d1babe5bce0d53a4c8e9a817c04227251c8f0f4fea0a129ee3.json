{"ast":null,"code":"\"use strict\";\n\n// Copyright 2021-2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.env = exports.DebugLogBackendBase = exports.placeholder = exports.AdhocDebugLogger = exports.LogSeverity = void 0;\nexports.getNodeBackend = getNodeBackend;\nexports.getDebugBackend = getDebugBackend;\nexports.getStructuredBackend = getStructuredBackend;\nexports.setBackend = setBackend;\nexports.log = log;\nconst node_events_1 = require(\"node:events\");\nconst process = __importStar(require(\"node:process\"));\nconst util = __importStar(require(\"node:util\"));\nconst colours_1 = require(\"./colours\");\n// Some functions (as noted) are based on the Node standard library, from\n// the following file:\n//\n// https://github.com/nodejs/node/blob/main/lib/internal/util/debuglog.js\n/**\n * This module defines an ad-hoc debug logger for Google Cloud Platform\n * client libraries in Node. An ad-hoc debug logger is a tool which lets\n * users use an external, unified interface (in this case, environment\n * variables) to determine what logging they want to see at runtime. This\n * isn't necessarily fed into the console, but is meant to be under the\n * control of the user. The kind of logging that will be produced by this\n * is more like \"call retry happened\", not \"event you'd want to record\n * in Cloud Logger\".\n *\n * More for Googlers implementing libraries with it:\n * go/cloud-client-logging-design\n */\n/**\n * Possible log levels. These are a subset of Cloud Observability levels.\n * https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry#LogSeverity\n */\nvar LogSeverity;\n(function (LogSeverity) {\n  LogSeverity[\"DEFAULT\"] = \"DEFAULT\";\n  LogSeverity[\"DEBUG\"] = \"DEBUG\";\n  LogSeverity[\"INFO\"] = \"INFO\";\n  LogSeverity[\"WARNING\"] = \"WARNING\";\n  LogSeverity[\"ERROR\"] = \"ERROR\";\n})(LogSeverity || (exports.LogSeverity = LogSeverity = {}));\n/**\n * Our logger instance. This actually contains the meat of dealing\n * with log lines, including EventEmitter. This contains the function\n * that will be passed back to users of the package.\n */\nclass AdhocDebugLogger extends node_events_1.EventEmitter {\n  /**\n   * @param upstream The backend will pass a function that will be\n   *   called whenever our logger function is invoked.\n   */\n  constructor(namespace, upstream) {\n    super();\n    this.namespace = namespace;\n    this.upstream = upstream;\n    this.func = Object.assign(this.invoke.bind(this), {\n      // Also add an instance pointer back to us.\n      instance: this,\n      // And pull over the EventEmitter functionality.\n      on: (event, listener) => this.on(event, listener)\n    });\n    // Convenience methods for log levels.\n    this.func.debug = (...args) => this.invokeSeverity(LogSeverity.DEBUG, ...args);\n    this.func.info = (...args) => this.invokeSeverity(LogSeverity.INFO, ...args);\n    this.func.warn = (...args) => this.invokeSeverity(LogSeverity.WARNING, ...args);\n    this.func.error = (...args) => this.invokeSeverity(LogSeverity.ERROR, ...args);\n    this.func.sublog = namespace => log(namespace, this.func);\n  }\n  invoke(fields, ...args) {\n    // Push out any upstream logger first.\n    if (this.upstream) {\n      this.upstream(fields, ...args);\n    }\n    // Emit sink events.\n    this.emit('log', fields, args);\n  }\n  invokeSeverity(severity, ...args) {\n    this.invoke({\n      severity\n    }, ...args);\n  }\n}\nexports.AdhocDebugLogger = AdhocDebugLogger;\n/**\n * This can be used in place of a real logger while waiting for Promises or disabling logging.\n */\nexports.placeholder = new AdhocDebugLogger('', () => {}).func;\n/**\n * The base class for debug logging backends. It's possible to use this, but the\n * same non-guarantees above still apply (unstable interface, etc).\n *\n * @private\n * @internal\n */\nclass DebugLogBackendBase {\n  constructor() {\n    var _a;\n    this.cached = new Map();\n    this.filters = [];\n    this.filtersSet = false;\n    // Look for the Node config variable for what systems to enable. We'll store\n    // these for the log method below, which will call setFilters() once.\n    let nodeFlag = (_a = process.env[exports.env.nodeEnables]) !== null && _a !== void 0 ? _a : '*';\n    if (nodeFlag === 'all') {\n      nodeFlag = '*';\n    }\n    this.filters = nodeFlag.split(',');\n  }\n  log(namespace, fields, ...args) {\n    try {\n      if (!this.filtersSet) {\n        this.setFilters();\n        this.filtersSet = true;\n      }\n      let logger = this.cached.get(namespace);\n      if (!logger) {\n        logger = this.makeLogger(namespace);\n        this.cached.set(namespace, logger);\n      }\n      logger(fields, ...args);\n    } catch (e) {\n      // Silently ignore all errors; we don't want them to interfere with\n      // the user's running app.\n      // e;\n      console.error(e);\n    }\n  }\n}\nexports.DebugLogBackendBase = DebugLogBackendBase;\n// The basic backend. This one definitely works, but it's less feature-filled.\n//\n// Rather than using util.debuglog, this implements the same basic logic directly.\n// The reason for this decision is that debuglog checks the value of the\n// NODE_DEBUG environment variable before any user code runs; we therefore\n// can't pipe our own enables into it (and util.debuglog will never print unless\n// the user duplicates it into NODE_DEBUG, which isn't reasonable).\n//\nclass NodeBackend extends DebugLogBackendBase {\n  constructor() {\n    super(...arguments);\n    // Default to allowing all systems, since we gate earlier based on whether the\n    // variable is empty.\n    this.enabledRegexp = /.*/g;\n  }\n  isEnabled(namespace) {\n    return this.enabledRegexp.test(namespace);\n  }\n  makeLogger(namespace) {\n    if (!this.enabledRegexp.test(namespace)) {\n      return () => {};\n    }\n    return (fields, ...args) => {\n      var _a;\n      // TODO: `fields` needs to be turned into a string here, one way or another.\n      const nscolour = `${colours_1.Colours.green}${namespace}${colours_1.Colours.reset}`;\n      const pid = `${colours_1.Colours.yellow}${process.pid}${colours_1.Colours.reset}`;\n      let level;\n      switch (fields.severity) {\n        case LogSeverity.ERROR:\n          level = `${colours_1.Colours.red}${fields.severity}${colours_1.Colours.reset}`;\n          break;\n        case LogSeverity.INFO:\n          level = `${colours_1.Colours.magenta}${fields.severity}${colours_1.Colours.reset}`;\n          break;\n        case LogSeverity.WARNING:\n          level = `${colours_1.Colours.yellow}${fields.severity}${colours_1.Colours.reset}`;\n          break;\n        default:\n          level = (_a = fields.severity) !== null && _a !== void 0 ? _a : LogSeverity.DEFAULT;\n          break;\n      }\n      const msg = util.formatWithOptions({\n        colors: colours_1.Colours.enabled\n      }, ...args);\n      const filteredFields = Object.assign({}, fields);\n      delete filteredFields.severity;\n      const fieldsJson = Object.getOwnPropertyNames(filteredFields).length ? JSON.stringify(filteredFields) : '';\n      const fieldsColour = fieldsJson ? `${colours_1.Colours.grey}${fieldsJson}${colours_1.Colours.reset}` : '';\n      console.error('%s [%s|%s] %s%s', pid, nscolour, level, msg, fieldsJson ? ` ${fieldsColour}` : '');\n    };\n  }\n  // Regexp patterns below are from here:\n  // https://github.com/nodejs/node/blob/c0aebed4b3395bd65d54b18d1fd00f071002ac20/lib/internal/util/debuglog.js#L36\n  setFilters() {\n    const totalFilters = this.filters.join(',');\n    const regexp = totalFilters.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&').replace(/\\*/g, '.*').replace(/,/g, '$|^');\n    this.enabledRegexp = new RegExp(`^${regexp}$`, 'i');\n  }\n}\n/**\n * @returns A backend based on Node util.debuglog; this is the default.\n */\nfunction getNodeBackend() {\n  return new NodeBackend();\n}\nclass DebugBackend extends DebugLogBackendBase {\n  constructor(pkg) {\n    super();\n    this.debugPkg = pkg;\n  }\n  makeLogger(namespace) {\n    const debugLogger = this.debugPkg(namespace);\n    return (fields, ...args) => {\n      // TODO: `fields` needs to be turned into a string here.\n      debugLogger(args[0], ...args.slice(1));\n    };\n  }\n  setFilters() {\n    var _a;\n    const existingFilters = (_a = process.env['NODE_DEBUG']) !== null && _a !== void 0 ? _a : '';\n    process.env['NODE_DEBUG'] = `${existingFilters}${existingFilters ? ',' : ''}${this.filters.join(',')}`;\n  }\n}\n/**\n * Creates a \"debug\" package backend. The user must call require('debug') and pass\n * the resulting object to this function.\n *\n * ```\n *  setBackend(getDebugBackend(require('debug')))\n * ```\n *\n * https://www.npmjs.com/package/debug\n *\n * Note: Google does not explicitly endorse or recommend this package; it's just\n * being provided as an option.\n *\n * @returns A backend based on the npm \"debug\" package.\n */\nfunction getDebugBackend(debugPkg) {\n  return new DebugBackend(debugPkg);\n}\n/**\n * This pretty much works like the Node logger, but it outputs structured\n * logging JSON matching Google Cloud's ingestion specs. Rather than handling\n * its own output, it wraps another backend. The passed backend must be a subclass\n * of `DebugLogBackendBase` (any of the backends exposed by this package will work).\n */\nclass StructuredBackend extends DebugLogBackendBase {\n  constructor(upstream) {\n    var _a;\n    super();\n    this.upstream = (_a = upstream) !== null && _a !== void 0 ? _a : new NodeBackend();\n  }\n  makeLogger(namespace) {\n    const debugLogger = this.upstream.makeLogger(namespace);\n    return (fields, ...args) => {\n      var _a;\n      const severity = (_a = fields.severity) !== null && _a !== void 0 ? _a : LogSeverity.INFO;\n      const json = Object.assign({\n        severity,\n        message: util.format(...args)\n      }, fields);\n      const jsonString = JSON.stringify(json);\n      debugLogger(fields, jsonString);\n    };\n  }\n  setFilters() {\n    this.upstream.setFilters();\n  }\n}\n/**\n * Creates a \"structured logging\" backend. This pretty much works like the\n * Node logger, but it outputs structured logging JSON matching Google\n * Cloud's ingestion specs instead of plain text.\n *\n * ```\n *  setBackend(getStructuredBackend())\n * ```\n *\n * @param upstream If you want to use something besides the Node backend to\n *   write the actual log lines into, pass that here.\n * @returns A backend based on Google Cloud structured logging.\n */\nfunction getStructuredBackend(upstream) {\n  return new StructuredBackend(upstream);\n}\n/**\n * The environment variables that we standardized on, for all ad-hoc logging.\n */\nexports.env = {\n  /**\n   * Filter wildcards specific to the Node syntax, and similar to the built-in\n   * utils.debuglog() environment variable. If missing, disables logging.\n   */\n  nodeEnables: 'GOOGLE_SDK_NODE_LOGGING'\n};\n// Keep a copy of all namespaced loggers so users can reliably .on() them.\n// Note that these cached functions will need to deal with changes in the backend.\nconst loggerCache = new Map();\n// Our current global backend. This might be:\nlet cachedBackend = undefined;\n/**\n * Set the backend to use for our log output.\n * - A backend object\n * - null to disable logging\n * - undefined for \"nothing yet\", defaults to the Node backend\n *\n * @param backend Results from one of the get*Backend() functions.\n */\nfunction setBackend(backend) {\n  cachedBackend = backend;\n  loggerCache.clear();\n}\n/**\n * Creates a logging function. Multiple calls to this with the same namespace\n * will produce the same logger, with the same event emitter hooks.\n *\n * Namespaces can be a simple string (\"system\" name), or a qualified string\n * (system:subsystem), which can be used for filtering, or for \"system:*\".\n *\n * @param namespace The namespace, a descriptive text string.\n * @returns A function you can call that works similar to console.log().\n */\nfunction log(namespace, parent) {\n  // If the enable flag isn't set, do nothing.\n  const enablesFlag = process.env[exports.env.nodeEnables];\n  if (!enablesFlag) {\n    return exports.placeholder;\n  }\n  // This might happen mostly if the typings are dropped in a user's code,\n  // or if they're calling from JavaScript.\n  if (!namespace) {\n    return exports.placeholder;\n  }\n  // Handle sub-loggers.\n  if (parent) {\n    namespace = `${parent.instance.namespace}:${namespace}`;\n  }\n  // Reuse loggers so things like event sinks are persistent.\n  const existing = loggerCache.get(namespace);\n  if (existing) {\n    return existing.func;\n  }\n  // Do we have a backend yet?\n  if (cachedBackend === null) {\n    // Explicitly disabled.\n    return exports.placeholder;\n  } else if (cachedBackend === undefined) {\n    // One hasn't been made yet, so default to Node.\n    cachedBackend = getNodeBackend();\n  }\n  // The logger is further wrapped so we can handle the backend changing out.\n  const logger = (() => {\n    let previousBackend = undefined;\n    const newLogger = new AdhocDebugLogger(namespace, (fields, ...args) => {\n      if (previousBackend !== cachedBackend) {\n        // Did the user pass a custom backend?\n        if (cachedBackend === null) {\n          // Explicitly disabled.\n          return;\n        } else if (cachedBackend === undefined) {\n          // One hasn't been made yet, so default to Node.\n          cachedBackend = getNodeBackend();\n        }\n        previousBackend = cachedBackend;\n      }\n      cachedBackend === null || cachedBackend === void 0 ? void 0 : cachedBackend.log(namespace, fields, ...args);\n    });\n    return newLogger;\n  })();\n  loggerCache.set(namespace, logger);\n  return logger.func;\n}","map":{"version":3,"names":["exports","getNodeBackend","getDebugBackend","getStructuredBackend","setBackend","log","node_events_1","require","process","__importStar","util","colours_1","LogSeverity","AdhocDebugLogger","EventEmitter","constructor","namespace","upstream","func","Object","assign","invoke","bind","instance","on","event","listener","debug","args","invokeSeverity","DEBUG","info","INFO","warn","WARNING","error","ERROR","sublog","fields","emit","severity","placeholder","DebugLogBackendBase","cached","Map","filters","filtersSet","nodeFlag","_a","env","nodeEnables","split","setFilters","logger","get","makeLogger","set","e","console","NodeBackend","enabledRegexp","isEnabled","test","nscolour","Colours","green","reset","pid","yellow","level","red","magenta","DEFAULT","msg","formatWithOptions","colors","enabled","filteredFields","fieldsJson","getOwnPropertyNames","length","JSON","stringify","fieldsColour","grey","totalFilters","join","regexp","replace","RegExp","DebugBackend","pkg","debugPkg","debugLogger","slice","existingFilters","StructuredBackend","json","message","format","jsonString","loggerCache","cachedBackend","undefined","backend","clear","parent","enablesFlag","existing","previousBackend","newLogger"],"sources":["../../src/logging-utils.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}