{"ast":null,"code":"var _jsxFileName = \"/Users/chiragahmedabadi/dev/podcraftai/frontend/src/components/GoogleAuth.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleAuth = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleSuccess = async credentialResponse => {\n    try {\n      setLoading(true);\n      const decoded = jwtDecode(credentialResponse.credential);\n      setUser(decoded);\n\n      // Send user data to backend\n      const response = await fetch('http://localhost:8011/users/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: decoded.email,\n          name: decoded.name,\n          picture: decoded.picture,\n          access_token: credentialResponse.credential\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save user data');\n      }\n      const userData = await response.json();\n      console.log('User data saved:', userData);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleError = () => {\n    setError('Login Failed');\n    console.log('Login Failed');\n  };\n  const handleLogout = () => {\n    setUser(null);\n    setError(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"google-auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"google-auth-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-button\",\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleSuccess,\n        onError: handleError,\n        useOneTap: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [user.picture && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.picture,\n        alt: \"profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleAuth, \"LS9BKEfHbIDtuRuOK2vnlGO5vPM=\");\n_c = GoogleAuth;\nexport default GoogleAuth;\nvar _c;\n$RefreshReg$(_c, \"GoogleAuth\");","map":{"version":3,"names":["React","useState","GoogleLogin","jwtDecode","jsxDEV","_jsxDEV","GoogleAuth","_s","user","setUser","error","setError","loading","setLoading","handleSuccess","credentialResponse","decoded","credential","response","fetch","method","headers","body","JSON","stringify","email","name","picture","access_token","ok","Error","userData","json","console","log","err","message","handleError","handleLogout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","useOneTap","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/chiragahmedabadi/dev/podcraftai/frontend/src/components/GoogleAuth.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { jwtDecode } from 'jwt-decode';\n\nconst GoogleAuth = () => {\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleSuccess = async (credentialResponse) => {\n    try {\n      setLoading(true);\n      const decoded = jwtDecode(credentialResponse.credential);\n      setUser(decoded);\n\n      // Send user data to backend\n      const response = await fetch('http://localhost:8011/users/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: decoded.email,\n          name: decoded.name,\n          picture: decoded.picture,\n          access_token: credentialResponse.credential\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save user data');\n      }\n\n      const userData = await response.json();\n      console.log('User data saved:', userData);\n    } catch (err) {\n      setError(err.message);\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleError = () => {\n    setError('Login Failed');\n    console.log('Login Failed');\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    setError(null);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"google-auth-container\">\n        <div>Loading...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"google-auth-container\">\n      {error && <div className=\"error-message\">{error}</div>}\n      {!user ? (\n        <div className=\"login-button\">\n          <GoogleLogin\n            onSuccess={handleSuccess}\n            onError={handleError}\n            useOneTap\n          />\n        </div>\n      ) : (\n        <div className=\"user-info\">\n          {user.picture && <img src={user.picture} alt=\"profile\" />}\n          <h2>{user.name}</h2>\n          <p>{user.email}</p>\n          <button onClick={handleLogout} className=\"logout-button\">\n            Logout\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GoogleAuth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}